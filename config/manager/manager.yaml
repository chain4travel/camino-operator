apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        image: controller:latest
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 200Mi
          requests:
            cpu: 500m
            memory: 200Mi
      serviceAccountName: controller-manager
      imagePullSecrets:
        - name:  avalanchego-operator-dockerhub
      terminationGracePeriodSeconds: 10
---
apiVersion: "kubernetes-client.io/v1"
kind: ExternalSecret
metadata:
  name: dockerhub
  namespace: default
spec:
  backendType: secretsManager
  template:
    type: kubernetes.io/dockerconfigjson
  data:
    - key: k8s/dockerhub
      name: .dockerconfigjson
      property: .dockerconfigjson_BASE64
      isBinary: true